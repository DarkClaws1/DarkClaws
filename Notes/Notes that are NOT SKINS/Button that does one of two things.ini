A CONDITION is something that needs to be true for something to happen

Examples: 
	You can open a door on the condition that you have the key
	
	You can watch an R rated movie on the condition that you are 18 or older
	
	You can buy the item on the condition that you have more money than how much it costs
	
Sometimes you want a button that does one of two different things based on a CONDITION

Examples:
	A button that increases the volume by 1 but won't make it higher than 100. The Condition is volume < 100
	
	A button that will open a program if it is not open or close it if it is open. The Condition is the program is open
	
;=================================================
;	You need a measure to handle the CONDITION
;=================================================

IfCondition = 
IfTrueAction =
IfFalseAction =
DynamicVariables = 1

 - Add this to Measures
 - You type the condition after IfCondition
 - IF YOUR CONDITION USES A VARIABLE
	Type the name of the variable in #s
		Ex: #Andy# = 20 or #Dilan# > 67
 - IF YOUR CONDITION USES A MEASURE
	Type the name of the Measure in []s
		Ex: [MeasureTime] > 500 or [MeasureName] = Andy
 - Put bangs after IfTrue and IfFalse
 - Check your "Things You Can Make A Skin Do" notes for what can go after the IfTrueAction and IfFalseAction
 
 
STOP READING!DON'T READ UNDER THIS LINE YET!

IF IT IS A BUTTON YOU NEED THESE AS WELL

[MeasureName]
IfCondition = 
IfTrueAction =[!DisableMeasure "MeasureName"]
IfFalseAction = [!DisableMeasure "MeasureName"]
DynamicVariables = 1
Disabled = 1

 - You need the DisableMeasure [Bangs] after IfTrue and IfFalse